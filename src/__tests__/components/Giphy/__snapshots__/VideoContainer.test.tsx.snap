// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VideoContainer/> component : display <VideoContainer/> component  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .css-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: 16px;
  border: 1px solid #657786;
  overflow: hidden;
  width: 90%;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 0 0.75rem;
  position: relative;
}

.css-0>video {
  width: 100%;
  cursor: pointer;
}

.css-1 {
  position: absolute;
  left: 3%;
  bottom: 3%;
  padding: 0 4px;
  border-radius: 4px;
  background: rgba(0, 0, 0, 0.77);
  line-height: 1.5;
  font-size: 14px;
}

<body>
    <div>
      <div
        class="css-0"
      >
        <video
          aria-label="Will Smith Yes GIF by Bad Boys For Life"
          autoplay=""
          loop=""
          preload="auto"
        />
        <div
          class="MuiBox-root css-1"
        >
          GIF
        </div>
      </div>
    </div>
  </body>,
  "container": .css-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: 16px;
  border: 1px solid #657786;
  overflow: hidden;
  width: 90%;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 0 0.75rem;
  position: relative;
}

.css-0>video {
  width: 100%;
  cursor: pointer;
}

.css-1 {
  position: absolute;
  left: 3%;
  bottom: 3%;
  padding: 0 4px;
  border-radius: 4px;
  background: rgba(0, 0, 0, 0.77);
  line-height: 1.5;
  font-size: 14px;
}

<div>
    <div
      class="css-0"
    >
      <video
        aria-label="Will Smith Yes GIF by Bad Boys For Life"
        autoplay=""
        loop=""
        preload="auto"
      />
      <div
        class="MuiBox-root css-1"
      >
        GIF
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
